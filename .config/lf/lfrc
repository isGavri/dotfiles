set previewer ~/.config/lf/lf_kitty_previwer
set cleaner ~/.config/lf/lf_kitty_clean
# Basic Settings
set ignorecase true
set icons true

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd makepryc ${{
  mkdir -p images
  cp /home/notsy/Documents/C/Makefile Makefile
  cp /home/notsy/Documents/C/main.c main.c
  nvim main.c
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  nvim $ans
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# Trash bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trash-put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd restore_trash ${{
  trash-restore
}}

# Function to change window name
cmd on-cd &{{
   printf "\033]0; ${PWD/#$HOME/\~}\007" > /dev/tty
}}

cmd on-quit &{{
    printf "\e]7;\e\\" > /dev/tty
}}

# Run change window name function at startup
on-cd

# cd after quiting
cmd quit-and-cd &{{
    pwd > $LF_CD_FILE
    lf -remote "send $id quit"
}}

map Q quit-and-cd



# Bindings
map d
map m

map E $nvim "$f"
map e $nvim

map au unarchive
map ae $wine "$f"

# Basic Functions
map . set hidden!
map dd trash
map dr restore_trash
map p paste
map x cut
map y copy
map <enter> open
map R reload
map mf mkfile
map md mkdir
map mkpc makepryc
map C clear

# Movement
map gd cd ~/Documents
map gD cd ~/Downloads
map gi cd ~/Pictures
map gc cd ~/.config
map gv cd ~/videos
map gs cd ~/.local/bin
map gt cd ~/.local/share/Trash/files
